/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg3a.ui;

import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import pkg3a.utils.DBUtil;
import pkg3a.utils.DBUtil.QueryDbListener;
import pkg3a.utils.Order;

/**
 *
 * @author yazeed44
 */
public class FindExpiredDomainsInRangeDialog extends javax.swing.JDialog implements OrdersTable.UpdateOrdersListener {

    
    private ArrayList<Order> mOrders;
    private final Frame mFrame;
    
    /**
     * Creates new form FindExpiredDomainsInRangeDialog
     */
    public FindExpiredDomainsInRangeDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        mFrame = parent;
        
        DBUtil.loadOrders(new QueryDbListener<ArrayList<Order>>(){

            @Override
            public void queriedSuccessfully(ArrayList<Order> result) {
                mOrders = result;
                initComponents();
            }

            @Override
            public void failedToQuery(Throwable throwable) {
            }
        });
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fromDateCombo = new datechooser.beans.DateChooserCombo();
        jLabel2 = new javax.swing.JLabel();
        toDateCombo = new datechooser.beans.DateChooserCombo();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersTable = new OrdersTable(mFrame,mOrders,this);
        searchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("KacstOne", 1, 18)); // NOI18N
        jLabel1.setText("من");

        jLabel2.setFont(new java.awt.Font("KacstOne", 1, 18)); // NOI18N
        jLabel2.setText("إلى");

        jScrollPane1.setViewportView(ordersTable);

        searchButton.setFont(new java.awt.Font("KacstOne", 1, 14)); // NOI18N
        searchButton.setText("بحث");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(toDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(fromDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(24, 24, 24))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_searchButtonActionPerformed

   private void search(){
       final long fromMillis = fromDateCombo.getSelectedDate().getTimeInMillis();
       final long toMillis = toDateCombo.getSelectedDate().getTimeInMillis();
       
       if (fromMillis > toMillis){
       JOptionPane.showMessageDialog(this, "من أكبر من إلى !!","خطأ",JOptionPane.ERROR_MESSAGE);
       return;
       }
       
       
       DBUtil.loadOrdersWithinRange(fromMillis, toMillis, new QueryDbListener<ArrayList<Order>>(){

           @Override
           public void queriedSuccessfully(ArrayList<Order> result) {
               
               for(final Order order : result){
                   System.out.println("Got order from filtering  " + order.getEndDomainDateFormatted());
               }
               
               ((OrdersTable)ordersTable).updateTable(result);
           }

           @Override
           public void failedToQuery(Throwable throwable) {
           }
       });
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo fromDateCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable ordersTable;
    private javax.swing.JButton searchButton;
    private datechooser.beans.DateChooserCombo toDateCombo;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onUpdateTable(OrdersTable ordersTable) {
        search();
    }

    @Override
    public boolean shouldAllowClick() {
        return false;
    }
}
