/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg3a.ui;

import datechooser.events.CommitEvent;
import datechooser.events.CommitListener;
import java.awt.Color;
import java.awt.Frame;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListDataListener;
import pkg3a.utils.Customer;
import pkg3a.utils.DBUtil;
import pkg3a.utils.DBUtil.InsertDbListener;
import pkg3a.utils.DBUtil.QueryDbListener;
import pkg3a.utils.HostingPackage;
import pkg3a.utils.Order;

/**
 *
 * @author yazeed44
 */
public class AddOrderDialog extends javax.swing.JDialog implements CommitListener {

    /**
     * Creates new form AddOrderDialog
     */
    private int mDomainPrice = 0;
    private AddDialogListener mAddListener;
    public AddOrderDialog(java.awt.Frame parent,boolean modal) {
        super(parent, true);
        initComponents();
        setupCustomerCombobox();
        setupPackageCombobox();
        setupDomainName();
        setTitle("إضافة طلبية");
        domainEndDate.addCommitListener(this);
        
       
        
    }
    
    public AddOrderDialog(Frame parent , final AddDialogListener listener){
        this(parent,true);
                mAddListener = listener;
    }
    
    public static void showAddDialog(final Frame parent , final AddDialogListener listener){
         new AddOrderDialog(parent,listener).setVisible(true);
    }
    
   
    
    private void setupCustomerCombobox(){
         DBUtil.loadCustomers(new QueryDbListener<ArrayList<Customer>>(){

                @Override
                public void queriedSuccessfully(ArrayList<Customer> result) {
                    customerCombobox.setModel(new CustomerComboboxModel(result));
                }

                @Override
                public void failedToQuery(Throwable throwable) {
                }
            });
    }
    
    private void setupPackageCombobox(){
         DBUtil.loadHostingPackages(new QueryDbListener<ArrayList<HostingPackage>>(){

                @Override
                public void queriedSuccessfully(ArrayList<HostingPackage> result) {
                    packageCombobox.setModel(new PackageComboboxModel(result));
                    hostingPackageExpireDate.setEnabled(false);
                }

                @Override
                public void failedToQuery(Throwable throwable) {
                }
            });
    }
    
    
    
    private void setupDomainName(){
         domainCostTxt.addKeyListener(new KeyListener(){

            @Override
            public void keyTyped(KeyEvent e) {
                updateTotalCostOnChangingDomainCost();
            }

            @Override
            public void keyPressed(KeyEvent e) {
                updateTotalCostOnChangingDomainCost();
            }

            @Override
            public void keyReleased(KeyEvent e) {
                updateTotalCostOnChangingDomainCost();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        customerCombobox = new javax.swing.JComboBox();
        addButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        totalCostText = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        domainCostTxt = new javax.swing.JFormattedTextField();
        noteText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        domainNameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        domainCheckbox = new javax.swing.JCheckBox();
        packageCombobox = new javax.swing.JComboBox();
        domainEndDate = new datechooser.beans.DateChooserCombo();
        jLabel10 = new javax.swing.JLabel();
        hostingPackageExpireDate = new datechooser.beans.DateChooserCombo();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel7.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        jLabel7.setText("العميل");

        cancelButton.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        cancelButton.setText("إلغاء");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        customerCombobox.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        customerCombobox.setToolTipText("");

        addButton.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        addButton.setText("إضافة");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        jLabel8.setText("قيمة الطلب");

        totalCostText.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        totalCostText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel4.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        jLabel4.setText("قيمة الدومين");
        jLabel4.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        jLabel9.setText("ملاحظة");

        domainCostTxt.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        domainCostTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        noteText.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setFont(new java.awt.Font("KacstOne", 1, 18)); // NOI18N
        jLabel5.setText("عام");

        jLabel6.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        jLabel6.setText("باقة الإستضافة");

        jLabel1.setFont(new java.awt.Font("KacstOne", 1, 18)); // NOI18N
        jLabel1.setText("الدومين");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        jLabel2.setText("إسم الدومين");

        domainNameTxt.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        jLabel3.setText("تاريخ التجديد");

        domainCheckbox.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
        domainCheckbox.setText("بدون دومين");
        domainCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                domainCheckboxStateChanged(evt);
            }
        });

        packageCombobox.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
        packageCombobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                packageComboboxItemStateChanged(evt);
            }
        });

        domainEndDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(51, 51, 51),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(51, 51, 51),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(51, 51, 51),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Dialog", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(51, 51, 51),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));

    jLabel10.setFont(new java.awt.Font("KacstOne", 1, 12)); // NOI18N
    jLabel10.setText("تاريخ تجديد باقة الإستضافة");

    jLabel11.setFont(new java.awt.Font("Monospaced", 1, 12)); // NOI18N
    jLabel11.setText("SR");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addButton)
                    .addGap(29, 29, 29)
                    .addComponent(cancelButton)
                    .addGap(42, 42, 42))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(46, 46, 46)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(hostingPackageExpireDate, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel10))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(packageCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel6))
                                .addComponent(domainCheckbox)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel5))))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(50, 50, 50)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(noteText)
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(jLabel11)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(totalCostText)
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel8))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(domainCostTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(domainEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(domainNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(42, 42, 42))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1)
                                .addComponent(jLabel4)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(customerCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel7)))
                    .addGap(0, 16, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1)
                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(domainCheckbox)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(domainNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(domainEndDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel4)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(domainCostTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(13, 13, 13)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel5)
                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel6)
                .addComponent(packageCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel10)
                .addComponent(hostingPackageExpireDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel7)
                .addComponent(customerCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel8)
                .addComponent(totalCostText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel11))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel9)
                .addComponent(noteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cancelButton)
                .addComponent(addButton))
            .addGap(18, 18, 18))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void domainCheckboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_domainCheckboxStateChanged
        // TODO add your handling code here:
       /* if (domainCheckbox.isSelected()){
            disableDomain();
        }
        else {
            enableDomain();
        }*/
        
        final boolean state = !domainCheckbox.isSelected();
        
        if (state){
            enableDomain();
        }
        else {
            disableDomain();
        }
        
        
        
    }//GEN-LAST:event_domainCheckboxStateChanged

     private void enableDomain() {
         
         final Color enabledColor = Color.white;
         
         domainCostTxt.setEnabled(true);
         domainCostTxt.setBackground(enabledColor);
         
        domainEndDate.setEnabled(true);
        domainEndDate.setBackground(enabledColor);
        
        domainNameTxt.setEnabled(true);
        domainNameTxt.setBackground(enabledColor);
         
    }

    private void disableDomain() {
        final Color disabledColor = Color.getColor("#EBEBE4");
         
         domainCostTxt.setEnabled(false);
         domainCostTxt.setBackground(disabledColor);
         
        domainEndDate.setEnabled(false);
        domainEndDate.setBackground(disabledColor);
        
        domainNameTxt.setEnabled(false);
        domainNameTxt.setBackground(disabledColor);
    }
    
    
    private void packageComboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_packageComboboxItemStateChanged
        // TODO add your handling code here:
        updateTotalCostOnChangingPackage();
        
        if (getSelectedHostingPackage().equals(HostingPackage.EMPTY_PACKAGE)){
            hostingPackageExpireDate.setEnabled(false);
        }
        
        else {
            hostingPackageExpireDate.setEnabled(true);
        }
    }//GEN-LAST:event_packageComboboxItemStateChanged

     private void updateTotalCostOnChangingDomainCost(){
       
        System.out.println("Started updating totalCost on changing domain cost");
        if (domainCostTxt.isEnabled() && domainCostTxt.getText().length() > 0){
            mDomainPrice = Integer.parseInt(domainCostTxt.getText());
        }
        else {
            mDomainPrice = 0;
        }
        
      
       
        
        totalCostText.setText((mDomainPrice + getSelectedPackageCost() ) + "");
    }
     

    
     private int getSelectedPackageCost(){
         
         final HostingPackage hostingPackage = getSelectedHostingPackage();
         
         if (hostingPackage == null || hostingPackage.equals(HostingPackage.EMPTY_PACKAGE)){
             return 0;
         }
         else {
             return hostingPackage.getYearCostAsInteger();
         }
         
         
     }
     
     private HostingPackage getSelectedHostingPackage(){
         final int index = packageCombobox.getSelectedIndex();
         
         return (HostingPackage) packageCombobox.getItemAt(index);
     }
    
    private void updateTotalCostOnChangingPackage(){
        
            totalCostText.setText((getSelectedPackageCost() + mDomainPrice) + "");
      
    }
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        submitOrder();
    }//GEN-LAST:event_addButtonActionPerformed

    protected void submitOrder(){
        
        final Order order = createOrderBuilder(-1).build();
        
        if (order == null){
            return;
        }
        
        DBUtil.insertOrder(order, new InsertDbListener(){

            @Override
            public void insertedSuccessfully() {
                mAddListener.addedSuccessfully(AddOrderDialog.this);
            }

            @Override
            public void failedToInsert(Throwable throwable) {
                mAddListener.failedToAdd(AddOrderDialog.this, throwable);
            }
        });
    }
     protected Order.Builder createOrderBuilder(final int orderId) {
         
         final Order.Builder builder = new Order.Builder(getSelectedCustomer().id,orderId);
         
         
             builder.setBeginingDate(System.currentTimeMillis());
         
         
         if (domainNameTxt.isEnabled()){
             builder.setDomain(domainNameTxt.getText())
                     .setDomainCost(mDomainPrice)
                     .setDomainEndDate(domainEndDate.getSelectedDate().getTime().getTime())
                     ;
             
            
         }
         
         if (!getSelectedHostingPackage().equals(HostingPackage.EMPTY_PACKAGE) && hostingPackageExpireDate.isEnabled()){
             builder.setHostingPackageEndDate(hostingPackageExpireDate.getSelectedDate().getTime().getTime());
         }
         
         
         builder.setHostingPackage(getSelectedHostingPackage().id)
                 .setNote(noteText.getText())
                 ;
         
         try {
         builder.setTotalCost(Integer.parseInt(totalCostText.getText()));    
         }
         
         catch(NumberFormatException ex){
             JOptionPane.showMessageDialog(this, "هنالك خطأ في قيمة الطلب", "خطأ", JOptionPane.ERROR_MESSAGE);
             return null;
         }
                 
         
         return builder;
    }
     
     private Customer getSelectedCustomer(){
         return ((Customer)customerCombobox.getSelectedItem());
     }

    @Override
    public void onCommit(CommitEvent ce) {
        
        final boolean state = hostingPackageExpireDate.isEnabled();
        
        hostingPackageExpireDate.setEnabled(true);
        hostingPackageExpireDate.setSelectedDate(domainEndDate.getSelectedDate());
        hostingPackageExpireDate.setEnabled(state);
    }
       
   
    
    
    private class CustomerComboboxModel implements ComboBoxModel<Customer>{
        
        
        private final ArrayList<Customer> customers;
        private Customer selectedCustomer;
        public CustomerComboboxModel(final ArrayList<Customer> customers){
           this.customers = customers;    
           selectedCustomer = customers.get(customers.size() -1);
        }

        @Override
        public void setSelectedItem(Object anItem) {    
            selectedCustomer = (Customer) anItem;
        }

        @Override
        public Customer getSelectedItem() {
            return selectedCustomer;
        }

        @Override
        public int getSize() {
            return customers.size();
        }

        @Override
        public Customer getElementAt(int index) {
            return customers.get(index);
        }

        @Override
        public void addListDataListener(ListDataListener l) {
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
        }
        
    }
    
    
    private class PackageComboboxModel implements ComboBoxModel<HostingPackage>{
        
        private HostingPackage selectedHostingPackage;
        
        private final ArrayList<HostingPackage> packages;
        
        public PackageComboboxModel(final ArrayList<HostingPackage> hostingPackages){
            packages = hostingPackages;
            packages.add(HostingPackage.EMPTY_PACKAGE);
            selectedHostingPackage = packages.get(packages.size() - 1);
            
           
        }

        @Override
        public void setSelectedItem(Object anItem) {
             selectedHostingPackage = (HostingPackage) anItem;
        }

        @Override
        public HostingPackage getSelectedItem() {
            return selectedHostingPackage;
        }

        @Override
        public int getSize() {
            
            return packages.size();
        }

        @Override
        public HostingPackage getElementAt(int index) {
            return packages.get(index);
        }

        @Override
        public void addListDataListener(ListDataListener l) {
        }

        @Override
        public void removeListDataListener(ListDataListener l) {
        }
        
    }
    
    
    public static interface AddDialogListener {
        void addedSuccessfully(AddOrderDialog dialog);
        void failedToAdd(AddOrderDialog dialog,Throwable throwable);
    }
    
    
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    protected javax.swing.JComboBox customerCombobox;
    protected javax.swing.JCheckBox domainCheckbox;
    protected javax.swing.JFormattedTextField domainCostTxt;
    protected datechooser.beans.DateChooserCombo domainEndDate;
    protected javax.swing.JTextField domainNameTxt;
    protected datechooser.beans.DateChooserCombo hostingPackageExpireDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    protected javax.swing.JTextField noteText;
    protected javax.swing.JComboBox packageCombobox;
    protected javax.swing.JFormattedTextField totalCostText;
    // End of variables declaration//GEN-END:variables

   

    

   
}
